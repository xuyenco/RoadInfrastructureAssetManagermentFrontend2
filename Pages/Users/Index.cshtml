@page
@model RoadInfrastructureAssetManagementFrontend2.Pages.Users.IndexModel
@{
    Layout = "_Layout";
    ViewData["Title"] = "Danh sách Người dùng";
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
<script src="https://cdn.tailwindcss.com"></script>
<!-- Thêm SweetAlert2 CDN -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<style>
    main {
        overflow-y: auto !important;
    }

    body {
        background-color: #f4f6f9;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .table-container {
        overflow-x: auto;
    }

    .pagination-controls button:disabled {
        opacity: 0.5;
        cursor: not-allowed;
    }

    .pagination-controls button {
        min-width: 32px;
        text-align: center;
        transition: background-color 0.2s;
    }
</style>

<div class="container mx-auto px-4 py-10 max-w-5xl">
    <h1 class="text-3xl font-bold text-gray-800 mb-6 text-center">Danh sách Người dùng</h1>

    @if (TempData["Error"] != null)
    {
        <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded-lg mb-4" role="alert">
            @TempData["Error"]
        </div>
    }
    @if (TempData["Success"] != null)
    {
        <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded-lg mb-4" role="alert">
            @TempData["Success"]
        </div>
    }

    <div class="bg-white rounded-lg shadow-lg p-6 table-container">
        <h3 class="text-2xl font-semibold text-gray-700 mb-4 border-b-2 border-blue-500 pb-2 text-center">Danh sách Người dùng</h3>

        <div class="flex flex-col md:flex-row md:items-center mb-4 gap-3">
            <div class="flex w-full md:w-1/2 gap-2">
                <input type="text" class="w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="Tìm kiếm..." id="searchInput">
                <select class="p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" id="searchField">
                    <option value="0">Mã Người dùng</option>
                    <option value="1">Tên đăng nhập</option>
                    <option value="2">Họ và Tên</option>
                    <option value="3">Email</option>
                    <option value="4">Vai trò</option>
                    <option value="5">Ngày tạo</option>
                </select>
            </div>
            <div class="flex gap-2">
                @if (HttpContext.Session.GetString("Role") == "admin" || HttpContext.Session.GetString("Role") == "manager")
                {
                    <a class="bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition duration-200 flex items-center" asp-page="/Users/UserCreate">
                        <i class="fas fa-plus mr-2"></i> Tạo Người dùng mới
                    </a>
                }
                @if (HttpContext.Session.GetString("Role") == "admin" || HttpContext.Session.GetString("Role") == "manager" || HttpContext.Session.GetString("Role") == "supervisor")
                {
                    <button class="bg-green-500 text-white px-4 py-2 rounded-lg hover:bg-green-600 transition duration-200 flex items-center" onclick="exportUsersReport()">
                        <i class="fas fa-file-export mr-2"></i> Xuất báo cáo
                    </button>
                }
            </div>
        </div>
        <div class="text-sm text-gray-600 mb-2" id="resultCount"></div>
        <div class="overflow-x-auto">
            <table class="w-full text-sm text-left text-gray-700">
                <thead class="bg-blue-500 text-white">
                    <tr>
                        <th class="px-4 py-3">Mã Người dùng</th>
                        <th class="px-4 py-3">Tên đăng nhập</th>
                        <th class="px-4 py-3">Họ và Tên</th>
                        <th class="px-4 py-3">Email</th>
                        <th class="px-4 py-3">Vai trò</th>
                        <th class="px-4 py-3">Ngày tạo</th>
                        @if (HttpContext.Session.GetString("Role") == "admin" || HttpContext.Session.GetString("Role") == "manager")
                        {
                            <th class="px-4 py-3">Thao tác</th>
                        }
                    </tr>
                </thead>
                <tbody id="userTableBody" class="divide-y divide-gray-200"></tbody>
            </table>
            <div class="pagination-controls mt-4 flex justify-center items-center gap-2">
                <button id="prevPage" class="px-3 py-1 bg-gray-200 rounded hover:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed">Trước</button>
                <div id="pageNumbers" class="flex gap-1"></div>
                <button id="nextPage" class="px-3 py-1 bg-gray-200 rounded hover:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed">Sau</button>
            </div>
        </div>
    </div>
</div>

@Html.AntiForgeryToken()
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script>
    console.log('Script loaded');

    let currentPage = 1;
    const pageSize = 10;

    // Hàm debounce để trì hoãn gọi hàm
    function debounce(func, delay) {
        let timeoutId;
        return function (...args) {
            clearTimeout(timeoutId);
            timeoutId = setTimeout(() => func.apply(this, args), delay);
        };
    }

    function fetchUsers(currentPage = 1, searchTerm = '', searchField = 0) {
        console.log('fetchUsers called with:', { currentPage, pageSize, searchTerm, searchField });
        const data = { currentPage, pageSize, searchTerm, searchField };
        $.ajax({
            url: '/Users/Index?handler=Users',
            type: 'GET',
            data: data,
            beforeSend: function (xhr) {
                console.log('Request URL:', this.url + '&' + $.param(data));
            },
            success: function (response) {
                console.log('AJAX success:', response);
                if (!response.success) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Lỗi',
                        text: response.message,
                        confirmButtonColor: '#3085d6'
                    }).then((result) => {
                        if (response.message.includes("đăng nhập lại")) {
                            window.location.href = "/Users/Login";
                        }
                    });
                    return;
                }
                updateTable(response.users || []);
                updatePagination(response.totalCount || 0);
                $('#resultCount').text(`Tổng số người dùng: ${response.totalCount || 0}`);
            },
            error: function (xhr) {
                console.error('AJAX error:', xhr);
                Swal.fire({
                    icon: 'error',
                    title: 'Lỗi',
                    text: 'Lỗi khi tải danh sách người dùng: ' + (xhr.responseJSON?.message || xhr.statusText || 'Lỗi không xác định'),
                    confirmButtonColor: '#3085d6'
                });
            }
        });
    }

    function updateTable(users) {
        const tbody = $('#userTableBody');
        tbody.empty();

        // Check if users is null or empty
        if (!users || users.length === 0) {
            const colSpan = '@HttpContext.Session.GetString("Role")' === 'admin' ? 7 : 6;
            tbody.append(`
                    <tr>
                        <td colspan="${colSpan}" class="px-4 py-3 text-center text-gray-500">Không có dữ liệu người dùng để hiển thị.</td>
                    </tr>
                `);
            return;
        }

        users.forEach(user => {
            const allow = '@HttpContext.Session.GetString("Role")' === 'manager' || '@HttpContext.Session.GetString("Role")' === 'admin';
            const row = `
                        <tr data-user-id="${user.user_id}" class="hover:bg-gray-50">
                            <td class="px-4 py-3">${user.user_id}</td>
                            <td class="px-4 py-3">${user.username || ''}</td>
                            <td class="px-4 py-3">${user.full_name || ''}</td>
                            <td class="px-4 py-3">${user.email || ''}</td>
                            <td class="px-4 py-3">${user.role || ''}</td>
                            <td class="px-4 py-3">${user.created_at ? new Date(user.created_at).toLocaleString('vi-VN', { day: '2-digit', month: '2-digit', year: 'numeric', hour: '2-digit', minute: '2-digit' }) : 'Chưa có'}</td>
                                ${allow ? `
                                <td class="px-4 py-3 flex gap-2">
                                    <a class="bg-blue-500 text-white px-3 py-1 rounded-lg hover:bg-blue-600 transition duration-200" href="/Users/UserDetail?id=${user.user_id}" title="Xem chi tiết">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                    <button class="bg-red-500 text-white px-3 py-1 rounded-lg hover:bg-red-600 transition duration-200 delete-btn" data-id="${user.user_id}" title="Xóa người dùng">
                                        <i class="fas fa-trash-alt"></i>
                                    </button>
                                    <a class="bg-yellow-500 text-white px-3 py-1 rounded-lg hover:bg-yellow-600 transition duration-200" href="/Users/UserUpdate?id=${user.user_id}" title="Cập nhật người dùng">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                </td>
                            ` : ''}
                        </tr>`;
            tbody.append(row);
        });
    }

    function updatePagination(totalCount) {
        const totalPages = Math.ceil(totalCount / pageSize);
        const pageNumbers = $('#pageNumbers');
        pageNumbers.empty();

        const maxVisiblePages = 5;
        let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));
        let endPage = startPage + maxVisiblePages - 1;

        if (endPage > totalPages) {
            endPage = totalPages;
            startPage = Math.max(1, endPage - maxVisiblePages + 1);
        }

        if (startPage > 1) {
            pageNumbers.append(`<button class="px-3 py-1 bg-gray-200 rounded hover:bg-gray-300" onclick="currentPage=1;fetchUsers(1, $('#searchInput').val(), $('#searchField').val())">1</button>`);
            if (startPage > 2) pageNumbers.append('<span>...</span>');
        }

        for (let i = startPage; i <= endPage; i++) {
            pageNumbers.append(`<button class="px-3 py-1 ${i === currentPage ? 'bg-blue-500 text-white' : 'bg-gray-200 hover:bg-gray-300'} rounded" onclick="currentPage=${i};fetchUsers(${i}, $('#searchInput').val(), $('#searchField').val())">${i}</button>`);
        }

        if (endPage < totalPages) {
            if (endPage < totalPages - 1) pageNumbers.append('<span>...</span>');
            pageNumbers.append(`<button class="px-3 py-1 bg-gray-200 rounded hover:bg-gray-300" onclick="currentPage=${totalPages};fetchUsers(${totalPages}, $('#searchInput').val(), $('#searchField').val())">${totalPages}</button>`);
        }

        $('#prevPage').prop('disabled', currentPage === 1);
        $('#nextPage').prop('disabled', currentPage === totalPages || totalPages === 0);
    }

    $(document).ready(function () {
        console.log('Document ready');
        fetchUsers(1);

        // Áp dụng debounce cho sự kiện input của searchInput
        const debouncedSearch = debounce(function (searchTerm, searchField) {
            currentPage = 1;
            fetchUsers(currentPage, searchTerm, searchField);
        }, 500);

        $('#searchInput').on('input', function () {
            debouncedSearch($(this).val(), $('#searchField').val());
        });

        $('#searchField').on('change', function () {
            currentPage = 1;
            fetchUsers(currentPage, $('#searchInput').val(), $(this).val());
        });

        $('#prevPage').on('click', function () {
            if (currentPage > 1) {
                currentPage--;
                fetchUsers(currentPage, $('#searchInput').val(), $('#searchField').val());
            }
        });

        $('#nextPage').on('click', function () {
            const totalPages = Math.ceil($('#resultCount').text().match(/\d+/)?.[0] / pageSize);
            if (currentPage < totalPages) {
                currentPage++;
                fetchUsers(currentPage, $('#searchInput').val(), $('#searchField').val());
            }
        });

        $(document).on('click', '.delete-btn', function () {
            const userId = $(this).data('id');
            Swal.fire({
                title: 'Xác nhận xóa',
                text: `Bạn có chắc chắn muốn xóa người dùng ${userId}?`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Xóa',
                cancelButtonText: 'Hủy'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '/Users/Index?handler=Delete',
                        type: 'POST',
                        data: { id: userId },
                        headers: {
                            "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                        },
                        success: function (response) {
                            if (response.success) {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Thành công',
                                    text: 'Xóa người dùng thành công!',
                                    confirmButtonColor: '#3085d6'
                                }).then(() => {
                                    fetchUsers(currentPage, $('#searchInput').val(), $('#searchField').val());
                                });
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Lỗi',
                                    text: response.message,
                                    confirmButtonColor: '#3085d6'
                                });
                            }
                        },
                        error: function (xhr) {
                            Swal.fire({
                                icon: 'error',
                                title: 'Lỗi',
                                text: 'Lỗi khi xóa người dùng: ' + (xhr.responseJSON?.message || xhr.statusText || 'Lỗi không xác định'),
                                confirmButtonColor: '#3085d6'
                            });
                        }
                    });
                }
            });
        });
    });

    window.exportUsersReport = function () {
        window.location.href = "/Users/Index?handler=ExportExcel";
    };
</script>