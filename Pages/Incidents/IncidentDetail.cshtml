@page "{id:int}"
@using System.Text.Json
@model RoadInfrastructureAssetManagementFrontend.Pages.Incidents.IncidentDetailModel
@{
}

<!DOCTYPE html>
<html>
<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
    <style>
        body {
            background-color: #f4f6f9;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .container {
            margin-top: 40px;
            max-width: 1200px;
        }

        .detail-container {
            background-color: #ffffff;
            border-radius: 12px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
            padding: 30px;
            margin-bottom: 40px;
            transition: box-shadow 0.3s ease;
        }

            .detail-container:hover {
                box-shadow: 0 6px 25px rgba(0, 0, 0, 0.1);
            }

        h1 {
            font-size: 2.5rem;
            color: #2c3e50;
            font-weight: 700;
            margin-bottom: 30px;
            text-align: center;
        }

        h3 {
            font-size: 1.75rem;
            color: #34495e;
            font-weight: 600;
            margin-bottom: 20px;
            border-bottom: 2px solid #3498db;
            padding-bottom: 5px;
        }

        .info-row {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
        }

        .info-item {
            flex: 1 1 45%;
            background-color: #f9fbfc;
            padding: 15px;
            border-radius: 8px;
            border-left: 4px solid #3498db;
            margin-bottom: 15px;
            transition: transform 0.2s ease;
        }

            .info-item:hover {
                transform: translateY(-3px);
            }

            .info-item strong {
                color: #2c3e50;
                font-weight: 600;
            }

            .info-item span {
                color: #7f8c8d;
                word-wrap: break-word;
            }

        .image-gallery {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
            gap: 15px;
            margin-top: 25px;
        }

        .image-card {
            width: 100%;
            height: 220px;
            object-fit: cover;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

            .image-card:hover {
                transform: scale(1.05);
                box-shadow: 0 4px 15px rgba(0, 0, 0, 0.15);
            }

        .btn-secondary {
            background-color: #34495e;
            border-color: #34495e;
            padding: 10px 20px;
            font-size: 1rem;
            font-weight: 500;
            border-radius: 8px;
            transition: background-color 0.3s ease, transform 0.2s ease;
        }

            .btn-secondary:hover {
                background-color: #2c3e50;
                border-color: #2c3e50;
                transform: translateY(-2px);
            }

            .btn-secondary i {
                margin-right: 8px;
            }

        .alert-danger {
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 20px;
        }

        #map {
            height: 400px;
            width: 100%;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            margin-top: 20px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Chi tiết Incident</h1>

        <div class="detail-container">
            @if (TempData["Error"] != null)
            {
                <div class="alert alert-danger" role="alert">
                    @TempData["Error"]
                </div>
            }

            @if (Model.Incident != null)
            {
                <h3>Thông tin Incident</h3>
                <div class="info-row">
                    <div class="info-item">
                        <strong>ID:</strong> <span>@Model.Incident.incident_id</span>
                    </div>
                    <div class="info-item">
                        <strong>Địa chỉ:</strong> <span>@(Model.Incident.address ?? "Không có")</span>
                    </div>
                    <div class="info-item">
                        <strong>Tuyến đường:</strong> <span>@(Model.Incident.route ?? "Không có")</span>
                    </div>
                    <div class="info-item">
                        <strong>Vị trí (VN2000):</strong> <span>@Model.LocationDisplay</span>
                    </div>
                    <div class="info-item">
                        <strong>Mức độ nghiêm trọng:</strong> <span>@Model.Incident.severity_level</span>
                    </div>
                    <div class="info-item">
                        <strong>Mức độ hư hỏng:</strong> <span>@Model.Incident.damage_level</span>
                    </div>
                    <div class="info-item">
                        <strong>Trạng thái xử lý:</strong> <span>@Model.Incident.processing_status</span>
                    </div>
                    <div class="info-item">
                        <strong>Mã nhiệm vụ:</strong> <span>@(Model.Incident.task_id?.ToString() ?? "Không có")</span>
                    </div>
                    <div class="info-item">
                        <strong>Thời gian tạo:</strong> <span>@(Model.Incident.created_at?.ToString("dd/MM/yyyy HH:mm") ?? "Chưa tạo")</span>
                    </div>
                </div>

                <h3>Ảnh liên quan</h3>
                @if (Model.IncidentImages.Any())
                {
                    <div class="image-gallery">
                        @foreach (var image in Model.IncidentImages)
                        {
                            <img src="@image.image_url" alt="Incident Image" class="image-card" />
                        }
                    </div>
                }
                else
                {
                    <p class="text-muted">Không có ảnh nào liên quan đến Incident này.</p>
                }

                <h3>Vị trí trên bản đồ (WGS84)</h3>
                <div id="map"></div>
            }
            else
            {
                <p class="text-muted">Không có dữ liệu để hiển thị.</p>
            }

            <div class="mt-4 text-center">
                <a href="/Incidents/Index" class="btn btn-secondary">
                    <i class="fas fa-arrow-left"></i> Quay lại
                </a>
            </div>
        </div>
    </div>

    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var map = L.map('map').setView([21.0285, 105.8542], 13); // Default center (Hanoi)
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '© <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
            }).addTo(map);

            // Parse WGS84 coordinates from Model
            var wgs84Geometry = @Html.Raw(JsonSerializer.Serialize(Model.Wgs84Geometry));
            if (wgs84Geometry && wgs84Geometry.coordinates) {
                if (wgs84Geometry.type === 'Point') {
                    var lat = wgs84Geometry.coordinates[1];
                    var lng = wgs84Geometry.coordinates[0];
                    L.marker([lat, lng]).addTo(map);
                    map.setView([lat, lng], 15);
                } else if (wgs84Geometry.type === 'LineString') {
                    var coords = wgs84Geometry.coordinates.map(function (coord) {
                        return [coord[1], coord[0]]; // Convert to [lat, lng]
                    });
                    L.polyline(coords, { color: 'blue' }).addTo(map);
                    map.fitBounds(coords);
                }
            } else {
                // Fallback: Display a message if no valid geometry
                L.marker([21.0285, 105.8542]).addTo(map).bindPopup('Không có tọa độ hợp lệ.');
            }
        });
    </script>
</body>
</html>