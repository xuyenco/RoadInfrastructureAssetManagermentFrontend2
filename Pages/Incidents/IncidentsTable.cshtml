@page
@model RoadInfrastructureAssetManagementFrontend2.Pages.Incidents.IncidentsTableModel
@{
    ViewData["Title"] = "Danh sách Sự cố";
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
<script src="https://cdn.tailwindcss.com"></script>
<style>
    main {
        overflow-y: auto !important;
    }

    body {
        background-color: #f4f6f9;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .table-container {
        overflow-x: auto;
    }

    .pagination-controls button:disabled {
        opacity: 0.5;
        cursor: not-allowed;
    }

    .pagination-controls button {
        min-width: 32px;
        text-align: center;
        transition: background-color 0.2s;
    }
</style>

<div class="container mx-auto px-4 py-10 max-w-5xl">
    <h1 class="text-3xl font-bold text-gray-800 mb-6 text-center">Danh sách Sự cố</h1>

    @if (TempData["Error"] != null)
    {
        <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded-lg mb-4" role="alert">
            @TempData["Error"]
        </div>
    }
    @if (TempData["Success"] != null)
    {
        <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded-lg mb-4" role="alert">
            @TempData["Success"]
        </div>
    }

    <div class="bg-white rounded-lg shadow-lg p-6 table-container">
        <h3 class="text-2xl font-semibold text-gray-700 mb-4 border-b-2 border-blue-500 pb-2 text-center">Danh sách Sự cố</h3>

        <div class="flex flex-col md:flex-row md:items-center mb-4 gap-3">
            <div class="flex w-full md:w-1/2 gap-2">
                <input type="text" class="w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="Tìm kiếm..." id="searchInput">
                <select class="p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" id="searchField">
                    <option value="0">Mã sự cố</option>
                    <option value="1">Địa chỉ</option>
                    <option value="2">Tuyến đường</option>
                    <option value="3">Mức độ nghiêm trọng</option>
                    <option value="4">Mức độ hư hại</option>
                    <option value="5">Trạng thái xử lý</option>
                    <option value="6">Ngày tạo</option>
                    <option value="7">Loại sự cố</option>

                </select>
            </div>
            <div class="flex gap-2">
                <a class="bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition duration-200 flex items-center" asp-page="/Incidents/IncidentCreate">
                    <i class="fas fa-plus mr-2"></i> Tạo sự cố mới
                </a>
                <button class="bg-green-500 text-white px-4 py-2 rounded-lg hover:bg-green-600 transition duration-200 flex items-center" onclick="exportIncidentsReport()">
                    <i class="fas fa-file-export mr-2"></i> Xuất báo cáo
                </button>
            </div>
        </div>
        <div class="text-sm text-gray-600 mb-2" id="resultCount"></div>
        <div class="overflow-x-auto">
            <table class="w-full text-sm text-left text-gray-700">
                <thead class="bg-blue-500 text-white">
                    <tr>
                        <th class="px-4 py-3">Mã sự cố</th>
                        <th class="px-4 py-3">Địa chỉ</th>
                        <th class="px-4 py-3">Tuyến đường</th>
                        <th class="px-4 py-3">Mức độ nghiêm trọng</th>
                        <th class="px-4 py-3">Mức độ hư hại</th>
                        <th class="px-4 py-3">Trạng thái xử lý</th>
                        <th class="px-4 py-3">Mã nhiệm vụ</th>
                        <th class="px-4 py-3">Ngày tạo</th>
                        <th class="px-4 py-3">Hành động</th>
                    </tr>
                </thead>
                <tbody id="incidentTableBody" class="divide-y divide-gray-200"></tbody>
            </table>
            <div class="pagination-controls mt-4 flex justify-center items-center gap-2">
                <button id="prevPage" class="px-3 py-1 bg-gray-200 rounded hover:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed">Trước</button>
                <div id="pageNumbers" class="flex gap-1"></div>
                <button id="nextPage" class="px-3 py-1 bg-gray-200 rounded hover:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed">Sau</button>
            </div>
        </div>
    </div>
</div>

@Html.AntiForgeryToken()
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script>
    console.log('Script loaded');

    let currentPage = 1;
    const pageSize = 10;

    // Hàm debounce để trì hoãn gọi hàm
    function debounce(func, delay) {
        let timeoutId;
        return function (...args) {
            clearTimeout(timeoutId);
            timeoutId = setTimeout(() => func.apply(this, args), delay);
        };
    }

    function fetchIncidents(currentPage = 1, searchTerm = '', searchField = 0) {
        console.log('fetchIncidents called with:', { currentPage, pageSize, searchTerm, searchField });
        const data = { currentPage, pageSize, searchTerm, searchField };
        $.ajax({
            url: '/Incidents/IncidentsTable?handler=Incidents',
            type: 'GET',
            data: data,
            beforeSend: function (xhr) {
                console.log('Request URL:', this.url + '&' + $.param(data));
            },
            success: function (response) {
                console.log('AJAX success:', response);
                if (!response.success) {
                    alert(response.message);
                    if (response.message.includes("đăng nhập lại")) {
                        window.location.href = "/Users/Login";
                    }
                    return;
                }
                updateTable(response.incidents);
                updatePagination(response.totalCount);
                $('#resultCount').text(`Tổng số sự cố: ${response.totalCount}`);
            },
            error: function (xhr) {
                console.error('AJAX error:', xhr);
                alert('Lỗi khi tải danh sách sự cố: ' + (xhr.responseJSON?.message || xhr.statusText || 'Lỗi không xác định'));
            }
        });
    }

    function updateTable(incidents) {
        const tbody = $('#incidentTableBody');
        tbody.empty();
        incidents.forEach(incident => {
            const row = `
                <tr data-incident-id="${incident.incident_id}" class="hover:bg-gray-50">
                    <td class="px-4 py-3">${incident.incident_id}</td>
                    <td class="px-4 py-3">${incident.address || ''}</td>
                    <td class="px-4 py-3">${incident.route || ''}</td>
                    <td class="px-4 py-3">${incident.severity_level || ''}</td>
                    <td class="px-4 py-3">${incident.damage_level || ''}</td>
                    <td class="px-4 py-3">${incident.processing_status || ''}</td>
                    <td class="px-4 py-3">${incident.task_id || 'Không có'}</td>
                    <td class="px-4 py-3">${incident.created_at ? new Date(incident.created_at).toLocaleString('vi-VN', { day: '2-digit', month: '2-digit', year: 'numeric', hour: '2-digit', minute: '2-digit' }) : 'Chưa có dữ liệu'}</td>
                    <td class="px-4 py-3 flex gap-2">
                        <a class="bg-blue-500 text-white px-3 py-1 rounded-lg hover:bg-blue-600 transition duration-200" href="/Incidents/IncidentDetail/${incident.incident_id}" title="Chi tiết tài sản">
                            <i class="fas fa-info-circle"></i>
                        </a>
                        <a class="bg-yellow-500 text-white px-3 py-1 rounded-lg hover:bg-yellow-600 transition duration-200" href="/Incidents/IncidentUpdate/${incident.incident_id}" title="Sửa sự cố">
                            <i class="fas fa-edit"></i>
                        </a>
                        <button class="bg-red-500 text-white px-3 py-1 rounded-lg hover:bg-red-600 transition duration-200 delete-btn" data-id="${incident.incident_id}" title="Xóa sự cố">
                            <i class="fas fa-trash"></i>
                        </button>
                    </td>
                </tr>`;
            tbody.append(row);
        });
    }

    function updatePagination(totalCount) {
        const totalPages = Math.ceil(totalCount / pageSize);
        const pageNumbers = $('#pageNumbers');
        pageNumbers.empty();

        const maxVisiblePages = 5;
        let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));
        let endPage = startPage + maxVisiblePages - 1;

        if (endPage > totalPages) {
            endPage = totalPages;
            startPage = Math.max(1, endPage - maxVisiblePages + 1);
        }

        if (startPage > 1) {
            pageNumbers.append(`<button class="px-3 py-1 bg-gray-200 rounded hover:bg-gray-300" onclick="currentPage=1;fetchIncidents(1, $('#searchInput').val(), $('#searchField').val())">1</button>`);
            if (startPage > 2) pageNumbers.append('<span>...</span>');
        }

        for (let i = startPage; i <= endPage; i++) {
            pageNumbers.append(`<button class="px-3 py-1 ${i === currentPage ? 'bg-blue-500 text-white' : 'bg-gray-200 hover:bg-gray-300'} rounded" onclick="currentPage=${i};fetchIncidents(${i}, $('#searchInput').val(), $('#searchField').val())">${i}</button>`);
        }

        if (endPage < totalPages) {
            if (endPage < totalPages - 1) pageNumbers.append('<span>...</span>');
            pageNumbers.append(`<button class="px-3 py-1 bg-gray-200 rounded hover:bg-gray-300" onclick="currentPage=${totalPages};fetchIncidents(${totalPages}, $('#searchInput').val(), $('#searchField').val())">${totalPages}</button>`);
        }

        $('#prevPage').prop('disabled', currentPage === 1);
        $('#nextPage').prop('disabled', currentPage === totalPages || totalPages === 0);
    }

    $(document).ready(function () {
        console.log('Document ready');
        fetchIncidents(1);

        // Áp dụng debounce cho sự kiện input của searchInput
        const debouncedSearch = debounce(function (searchTerm, searchField) {
            currentPage = 1;
            fetchIncidents(currentPage, searchTerm, searchField);
        }, 500);

        $('#searchInput').on('input', function () {
            debouncedSearch($(this).val(), $('#searchField').val());
        });

        $('#searchField').on('change', function () {
            currentPage = 1;
            fetchIncidents(currentPage, $('#searchInput').val(), $(this).val());
        });

        $('#prevPage').on('click', function () {
            if (currentPage > 1) {
                currentPage--;
                fetchIncidents(currentPage, $('#searchInput').val(), $('#searchField').val());
            }
        });

        $('#nextPage').on('click', function () {
            const totalPages = Math.ceil($('#resultCount').text().match(/\d+/)?.[0] / pageSize);
            if (currentPage < totalPages) {
                currentPage++;
                fetchIncidents(currentPage, $('#searchInput').val(), $('#searchField').val());
            }
        });

        $(document).on('click', '.delete-btn', function () {
            const incidentId = $(this).data('id');
            if (confirm('Bạn có chắc chắn muốn xóa sự cố này?')) {
                $.ajax({
                    url: '/Incidents/IncidentsTable?handler=Delete',
                    type: 'POST',
                    data: { id: incidentId },
                    headers: {
                        "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (response) {
                        if (response.success) {
                            alert('Xóa sự cố thành công!');
                            fetchIncidents(currentPage, $('#searchInput').val(), $('#searchField').val());
                        } else {
                            alert(response.message);
                        }
                    },
                    error: function (xhr) {
                        alert('Lỗi khi xóa sự cố: ' + (xhr.responseJSON?.message || xhr.statusText || 'Lỗi không xác định'));
                    }
                });
            }
        });
    });

    window.exportIncidentsReport = function () {
        window.location.href = "/Incidents/IncidentsTable?handler=ExportExcel";
    };
</script>