@page "{id:int}"
@model RoadInfrastructureAssetManagementFrontend2.Pages.Incidents.IncidentUpdateModel
@{
    Layout = "_Layout";
    ViewData["Title"] = "Cập nhật Incident";
}
<!DOCTYPE html>
<html>
<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        #map {
            height: 400px;
            width: 100%;
            border-radius: 0.5rem;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            margin-bottom: 1.5rem;
        }

        main {
            overflow-y: auto !important;
        }

        body {
            background-color: #f4f6f9;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
    </style>
</head>
<body>
    <div class="container mx-auto px-4 py-10 max-w-4xl">
        <h1 class="text-3xl font-bold text-gray-800 mb-6 text-center">Cập nhật Incident</h1>

        <div class="bg-white rounded-lg shadow-lg p-6">
            <h3 class="text-2xl font-semibold text-gray-700 mb-4 border-b-2 border-blue-500 pb-2">Thông tin Incident</h3>

            @if (TempData["Error"] != null)
            {
                <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded-lg mb-4" role="alert">
                    @TempData["Error"]
                </div>
            }

            @if (!ViewData.ModelState.IsValid)
            {
                <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded-lg mb-4" role="alert">
                    @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                    {
                        <p>@error.ErrorMessage</p>
                    }
                </div>
            }

            @if (Model.Incident == null)
            {
                <p class="text-red-500">Không tìm thấy sự cố để cập nhật.</p>
            }
            else
            {
                <form method="post" enctype="multipart/form-data">
                    <div class="space-y-6">
                        <div>
                            <label class="block text-gray-700 font-semibold mb-1">ID</label>
                            <input class="w-full p-2 border border-gray-300 rounded-lg bg-gray-100" value="@Model.Id" disabled />
                            <input type="hidden" asp-for="Id" />
                        </div>

                        <div>
                            <label asp-for="Incident.address" class="block text-gray-700 font-semibold mb-1">Địa chỉ</label>
                            <input asp-for="Incident.address" class="w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" />
                            <span asp-validation-for="Incident.address" class="text-red-500 text-sm"></span>
                        </div>

                        <div>
                            <label asp-for="Incident.incident_type" class="block text-gray-700 font-semibold mb-1">Loại sự cố</label>
                            <select asp-for="Incident.incident_type" class="w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" required>
                                <option value="">Chọn loại tai nạn</option>
                                <option value="Tai nạn giao thông">Tai nạn giao thông</option>
                                <option value="Hư hỏng kết cấu hạ tầng">Hư hỏng kết cấu hạ tầng</option>
                                <option value="Sự cố môi trường">Sự cố môi trường</option>
                            </select>
                            <span asp-validation-for="Incident.incident_type" class="text-red-500 text-sm"></span>
                        </div>

                        <div>
                            <label asp-for="Incident.route" class="block text-gray-700 font-semibold mb-1">Tuyến đường</label>
                            <input asp-for="Incident.route" class="w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" />
                            <span asp-validation-for="Incident.route" class="text-red-500 text-sm"></span>
                        </div>

                        <div>
                            <label asp-for="Incident.severity_level" class="block text-gray-700 font-semibold mb-1">Mức độ nghiêm trọng</label>
                            <select asp-for="Incident.severity_level" class="w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" required>
                                <option value="">Chọn mức độ</option>
                                <option value="low">Low</option>
                                <option value="medium">Medium</option>
                                <option value="high">High</option>
                                <option value="critical">Critical</option>
                            </select>
                            <span asp-validation-for="Incident.severity_level" class="text-red-500 text-sm"></span>
                        </div>

                        <div>
                            <label asp-for="Incident.damage_level" class="block text-gray-700 font-semibold mb-1">Mức độ hư hỏng</label>
                            <select asp-for="Incident.damage_level" class="w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" required>
                                <option value="">Chọn mức độ</option>
                                <option value="minor">Minor</option>
                                <option value="moderate">Moderate</option>
                                <option value="severe">Severe</option>
                            </select>
                            <span asp-validation-for="Incident.damage_level" class="text-red-500 text-sm"></span>
                        </div>

                        <div>
                            <label asp-for="Incident.processing_status" class="block text-gray-700 font-semibold mb-1">Trạng thái xử lý</label>
                            <select asp-for="Incident.processing_status" class="w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" required>
                                <option value="">Chọn trạng thái</option>
                                <option value="reported">Reported</option>
                                <option value="under review">Under Review</option>
                                <option value="resolved">Resolved</option>
                                <option value="closed">Closed</option>
                            </select>
                            <span asp-validation-for="Incident.processing_status" class="text-red-500 text-sm"></span>
                        </div>

                        <div>
                            <label asp-for="Incident.task_id" class="block text-gray-700 font-semibold mb-1">Mã nhiệm vụ</label>
                            <input asp-for="Incident.task_id" type="number" min="0" class="w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" />
                            <span asp-validation-for="Incident.task_id" class="text-red-500 text-sm"></span>
                        </div>

                        <div>
                            <label for="Images" class="block text-gray-700 font-semibold mb-1">Ảnh liên quan (có thể chọn nhiều ảnh)</label>
                            <input type="file" id="Images" name="Images" class="w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" multiple accept="image/*" />
                        </div>

                        <div>
                            <label for="geometryType" class="block text-gray-700 font-semibold mb-1">Loại hình học</label>
                            <select asp-for="Incident.geometry.type" class="w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" id="geometryType" required>
                                <option value="Point">Điểm</option>
                                <option value="LineString">Đường</option>
                            </select>
                            <span asp-validation-for="Incident.geometry.type" class="text-red-500 text-sm"></span>
                        </div>

                        <div>
                            <label for="geometrySystem" class="block text-gray-700 font-semibold mb-1">Hệ tọa độ</label>
                            <select id="geometrySystem" class="w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" required>
                                <option value="wgs84">WGS84</option>
                                <option value="vn2000">VN2000</option>
                            </select>
                        </div>

                        <div id="map"></div>
                        <div id="coordinatesInput" class="mt-3">
                            <p id="instructionText" class="text-gray-500 mb-3"></p>
                            <div id="manualCoordinates" class="space-y-4">
                                <div id="pointInputs">
                                    <label for="manualLat" class="block text-gray-700 font-semibold mb-1">Vĩ độ (Latitude)</label>
                                    <input type="number" step="any" id="manualLat" class="w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="Nhập vĩ độ" />
                                </div>
                                <div id="pointInputsLng">
                                    <label for="manualLng" class="block text-gray-700 font-semibold mb-1">Kinh độ (Longitude)</label>
                                    <input type="number" step="any" id="manualLng" class="w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="Nhập kinh độ" />
                                </div>
                                <div id="multiCoordsGroup" class="hidden">
                                    <label for="manualCoords" class="block text-gray-700 font-semibold mb-1">Tọa độ (dạng JSON)</label>
                                    <textarea id="manualCoords" class="w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" rows="3" placeholder='Ví dụ: [[x1, y1], [x2, y2]]'></textarea>
                                </div>
                            </div>
                        </div>
                        <input type="hidden" id="coordinatesJson" asp-for="Incident.geometry.coordinates" />
                        <input type="hidden" id="geometrySystemHidden" name="GeometrySystem" />

                        <div class="flex justify-center space-x-4 mt-6">
                            <button type="button" id="resetButton" class="bg-gray-600 text-white px-4 py-2 rounded-lg hover:bg-gray-700 transition duration-200 flex items-center">
                                <i class="fas fa-undo mr-2"></i> Reset về tọa độ gốc
                            </button>
                            <button type="submit" class="bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition duration-200 flex items-center">
                                <i class="fas fa-save mr-2"></i> Cập nhật Incident
                            </button>
                            <a href="/Incidents/Index" class="bg-gray-600 text-white px-4 py-2 rounded-lg hover:bg-gray-700 transition duration-200 flex items-center">
                                <i class="fas fa-arrow-left mr-2"></i> Quay lại
                            </a>
                        </div>
                    </div>
                </form>
            }
        </div>
    </div>

    @section Scripts {
        <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
        <script src="~/lib/jquery/dist/jquery.min.js"></script>
        <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
        <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
        <script>
            var originalGeometryVN2000 = @Html.Raw(Json.Serialize(Model.Incident?.geometry));
            var originalGeometryWGS84 = @Html.Raw(Json.Serialize(CoordinateConverter.ConvertGeometryToWGS84(Model.Incident?.geometry)));
            var currentGeometryWGS84 = JSON.parse(JSON.stringify(originalGeometryWGS84));
            var currentCoordinates = JSON.parse(JSON.stringify(originalGeometryWGS84?.coordinates || []));
            var map = L.map('map').setView(getInitialCenter(), 13);
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '© <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
            }).addTo(map);
            var layer;
            var selectedCoordinates = [];

            function initializeForm() {
                var geoType = currentGeometryWGS84?.type?.toLowerCase() || 'point';
                var instructionText = document.getElementById('instructionText');
                var pointInputs = document.getElementById('pointInputs');
                var pointInputsLng = document.getElementById('pointInputsLng');
                var multiCoordsGroup = document.getElementById('multiCoordsGroup');

                map.off('click').off('dblclick');
                selectedCoordinates = [];

                if (geoType === 'point') {
                    instructionText.textContent = 'Click trên bản đồ để chọn một điểm hoặc nhập tọa độ thủ công bên dưới.';
                    pointInputs.classList.remove('hidden');
                    pointInputsLng.classList.remove('hidden');
                    multiCoordsGroup.classList.add('hidden');
                    map.on('click', onMapClickPoint);
                } else if (geoType === 'linestring') {
                    instructionText.textContent = 'Click trên bản đồ để thêm điểm vào đường (double-click để kết thúc) hoặc nhập tọa độ thủ công bên dưới.';
                    pointInputs.classList.add('hidden');
                    pointInputsLng.classList.add('hidden');
                    multiCoordsGroup.classList.remove('hidden');
                    map.on('click', onMapClickLine);
                    map.on('dblclick', finishLineString);
                }

                initializeLayer();
                updateInputs();
            }

            function getInitialCenter() {
                if (!currentGeometryWGS84?.coordinates) return [21.0285, 105.8542];
                if (currentGeometryWGS84.type === 'Point') {
                    return [currentGeometryWGS84.coordinates[1], currentGeometryWGS84.coordinates[0]];
                } else if (currentGeometryWGS84.type === 'LineString') {
                    return [currentGeometryWGS84.coordinates[0][1], currentGeometryWGS84.coordinates[0][0]];
                }
                return [21.0285, 105.8542];
            }

            function initializeLayer() {
                if (layer) map.removeLayer(layer);
                if (!currentGeometryWGS84?.coordinates) return;
                if (currentGeometryWGS84.type === 'Point') {
                    layer = L.marker([currentGeometryWGS84.coordinates[1], currentGeometryWGS84.coordinates[0]]).addTo(map);
                } else if (currentGeometryWGS84.type === 'LineString') {
                    layer = L.polyline(currentGeometryWGS84.coordinates.map(c => [c[1], c[0]]), { color: 'blue' }).addTo(map);
                    map.fitBounds(layer.getBounds());
                }
                updateHiddenInputs();
            }

            function updateLayer() {
                if (layer) map.removeLayer(layer);
                if (currentGeometryWGS84.type === 'Point') {
                    layer = L.marker([currentGeometryWGS84.coordinates[1], currentGeometryWGS84.coordinates[0]]).addTo(map);
                } else if (currentGeometryWGS84.type === 'LineString') {
                    layer = L.polyline(selectedCoordinates.length > 0 ? selectedCoordinates.map(c => [c[1], c[0]]) : currentGeometryWGS84.coordinates.map(c => [c[1], c[0]]), { color: 'blue' }).addTo(map);
                    map.fitBounds(layer.getBounds());
                }
                updateHiddenInputs();
            }

            function updateInputs() {
                var system = document.getElementById('geometrySystem').value;
                var geoType = currentGeometryWGS84?.type?.toLowerCase() || 'point';
                if (!currentGeometryWGS84?.coordinates) return;
                if (geoType === 'point') {
                    var coords = system === 'wgs84' ? currentGeometryWGS84.coordinates : originalGeometryVN2000.coordinates;
                    document.getElementById('manualLat').value = coords[1];
                    document.getElementById('manualLng').value = coords[0];
                } else {
                    var coords = system === 'wgs84' ? currentGeometryWGS84.coordinates : originalGeometryVN2000.coordinates;
                    document.getElementById('manualCoords').value = JSON.stringify(coords);
                }
            }

            function updateHiddenInputs() {
                var system = document.getElementById('geometrySystem').value;
                document.getElementById('coordinatesJson').value = JSON.stringify(currentCoordinates);
                document.getElementById('geometrySystemHidden').value = system;
            }

            function onMapClickPoint(e) {
                currentGeometryWGS84 = { type: 'Point', coordinates: [e.latlng.lng, e.latlng.lat] };
                currentCoordinates = currentGeometryWGS84.coordinates;
                updateLayer();
                updateInputs();
            }

            function onMapClickLine(e) {
                selectedCoordinates.push([e.latlng.lng, e.latlng.lat]);
                updateLayer();
            }

            function finishLineString() {
                if (selectedCoordinates.length < 2) {
                    alert('LineString cần ít nhất 2 điểm.');
                    return;
                }
                currentGeometryWGS84 = { type: 'LineString', coordinates: selectedCoordinates };
                currentCoordinates = currentGeometryWGS84.coordinates;
                selectedCoordinates = [];
                updateLayer();
                updateInputs();
                map.off('click').off('dblclick');
            }

            document.getElementById('geometrySystem').addEventListener('change', function () {
                updateInputs();
            });

            document.getElementById('manualLat').addEventListener('input', onManualInputChange);
            document.getElementById('manualLng').addEventListener('input', onManualInputChange);
            document.getElementById('manualCoords').addEventListener('input', onManualInputChange);

            function onManualInputChange() {
                var geoType = currentGeometryWGS84?.type?.toLowerCase() || 'point';
                var system = document.getElementById('geometrySystem').value;

                if (geoType === 'point') {
                    var lat = parseFloat(document.getElementById('manualLat').value);
                    var lng = parseFloat(document.getElementById('manualLng').value);
                    if (!isNaN(lat) && !isNaN(lng)) {
                        currentCoordinates = [lng, lat];
                        if (system === 'wgs84') {
                            currentGeometryWGS84 = { type: 'Point', coordinates: currentCoordinates };
                        }
                        updateLayer();
                        updateInputs();
                    }
                } else {
                    try {
                        var coords = JSON.parse(document.getElementById('manualCoords').value);
                        currentCoordinates = coords;
                        if (system === 'wgs84') {
                            currentGeometryWGS84 = { type: 'LineString', coordinates: coords };
                        }
                        updateLayer();
                        updateInputs();
                    } catch (e) {
                        console.error('Invalid coordinates JSON:', e);
                    }
                }
            }

            document.getElementById('resetButton').addEventListener('click', function () {
                currentGeometryWGS84 = JSON.parse(JSON.stringify(originalGeometryWGS84));
                currentCoordinates = JSON.parse(JSON.stringify(originalGeometryWGS84.coordinates));
                selectedCoordinates = [];
                initializeForm();
            });

            document.querySelector('form').addEventListener('submit', function (e) {
                if (!document.getElementById('coordinatesJson').value || !document.getElementById('geometrySystem').value) {
                    alert('Vui lòng chọn tọa độ và hệ tọa độ trên bản đồ hoặc nhập thủ công!');
                    e.preventDefault();
                }
            });

            document.addEventListener('DOMContentLoaded', function () {
                initializeForm();
            });
        </script>
    }
</body>
</html>